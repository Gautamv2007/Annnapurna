import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import jsPDF from 'jspdf';
import html2canvas from 'html2canvas';
import './OutPass.css';

function OutPass() {
  const [userData, setUserData] = useState({});
  const [departureTime, setDepartureTime] = useState('');
  const [returnTime, setReturnTime] = useState('');
  const [purpose, setPurpose] = useState('');
  const [message, setMessage] = useState('');
  const navigate = useNavigate();

  useEffect(() => {
    const fetchUserData = async () => {
      try {
        const token = localStorage.getItem('token');
        const response = await fetch('http://localhost:5000/api/user-details', {
          method: 'GET',
          headers: {
            Authorization: `Bearer ${token}`
          }
        });

        const result = await response.json();
        if (response.ok) {
          setUserData(result);
        } else {
          throw new Error(result.error || 'Failed to load user data');
        }
      } catch (error) {
        console.error('Error fetching user data:', error);
        setMessage('Token expired, Please re-login.');
      }
    };

    fetchUserData();
  }, []);

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      const token = localStorage.getItem('token');
      const response = await fetch('http://localhost:5000/api/outpass', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          Authorization: `Bearer ${token}`
        },
        body: JSON.stringify({
          departure_time: departureTime,
          return_time: returnTime,
          purpose: purpose
        })
      });

      const result = await response.json();
      if (response.ok) {
        setMessage('✅ OutPass request submitted successfully!');
        generatePDF();  // ⬅ Generate PDF on successful submission
        setDepartureTime('');
        setReturnTime('');
        setPurpose('');
      } else {
        setMessage(result.error || '❌ Failed to submit OutPass request.');
      }
    } catch (error) {
      setMessage('❌ An error occurred. Please try again.');
    }
  };

  // 📄 PDF Generator
  const generatePDF = () => {
    const pdf = new jsPDF();
    const marginX = 20;
    let y = 20;
  
    // Header
    pdf.setFontSize(16);
    pdf.setFont('Helvetica', 'bold');
    pdf.text('Indian Institute of Information Technology,', 105, y, { align: 'center' });
    y += 7;
    pdf.text('Design and Manufacturing, Kurnool', 105, y, { align: 'center' });
  
    y += 10;
    pdf.setFontSize(14);
    pdf.text('OutPass Request Form', 105, y, { align: 'center' });
  
    // Line below title
    y += 5;
    pdf.setLineWidth(0.5);
    pdf.line(marginX, y, 190, y);
    y += 10;
  
    // Info fields
    pdf.setFontSize(12);
    pdf.setFont('Helvetica', 'normal');
  
    const fields = [
      ['Name', userData.name],
      ['Email', userData.email],
      ['Phone', userData.phone],
      ['Semester', userData.semester],
      ['Hostel', userData.hostel],
      ['Room', userData.room],
      ['Branch', userData.branch],
      ['Departure Time', departureTime],
      ['Return Time', returnTime],
      ['Purpose', purpose],
    ];
  
    fields.forEach(([label, value]) => {
      pdf.text(`${label}:`, marginX, y);
      pdf.text(`${value || '-'}`, 120, y, { align: 'left' });
      y += 8;
    });
  
    // Signature Section
    y += 10;
    pdf.line(marginX, y, 90, y);
    pdf.text('Student Signature', marginX, y + 5);
  
    pdf.line(120, y, 190, y);
    pdf.text('Warden Signature', 120, y + 5);
  
    // Footer - "Generated by" and "Generated on"
    const generatedBy = 'Generated by Student OutPass Portal';
    const generatedOn = `Generated on: ${new Date().toLocaleString()}`;
    y = 280;
  
    pdf.setFontSize(10);
    pdf.setTextColor(100);
    pdf.text(generatedBy, 105, y, { align: 'center' });
    pdf.text(generatedOn, 105, y + 5, { align: 'center' });
  
    // Save PDF
    pdf.save('OutPass.pdf');
  };
  
  
  

  return (
    <div id="outpass-main-container">
      <h2 id="outpass-header-title">🛫 Request OutPass</h2>
      {message && <p id="outpass-status-message" className={message.includes('✅') ? 'success' : 'error'}>{message}</p>}

      {userData.name && (
        <div id="outpass-user-info-panel">
          <h4 id="outpass-info-heading">User Information:</h4>
          <p><strong>Name:</strong> {userData.name}</p>
          <p><strong>Email:</strong> {userData.email}</p>
          <p><strong>Phone:</strong> {userData.phone}</p>
          <p><strong>Semester:</strong> {userData.semester}</p>
          <p><strong>Hostel:</strong> {userData.hostel}</p>
          <p><strong>Room:</strong> {userData.room}</p>
          <p><strong>Branch:</strong> {userData.branch}</p>
          <p><strong>Departure Time:</strong> {departureTime}</p>
          <p><strong>Return Time:</strong> {returnTime}</p>
          <p><strong>Purpose:</strong> {purpose}</p>
        </div>
      )}

      <form id="outpass-request-form" onSubmit={handleSubmit}>
        <div id="outpass-form-group-departure">
          <label htmlFor="outpass-input-departure">Departure Time:</label>
          <input
            id="outpass-input-departure"
            type="datetime-local"
            value={departureTime}
            onChange={(e) => setDepartureTime(e.target.value)}
            required
          />
        </div>

        <div id="outpass-form-group-return">
          <label htmlFor="outpass-input-return">Return Time:</label>
          <input
            id="outpass-input-return"
            type="datetime-local"
            value={returnTime}
            onChange={(e) => setReturnTime(e.target.value)}
          />
        </div>

        <div id="outpass-form-group-purpose">
          <label htmlFor="outpass-input-purpose">Purpose:</label>
          <input
            id="outpass-input-purpose"
            type="text"
            value={purpose}
            onChange={(e) => setPurpose(e.target.value)}
            required
            placeholder="Enter reason for outpass"
          />
        </div>

        <button id="outpass-submit-button" type="submit">Submit OutPass</button>
      </form>

      <button id="outpass-back-button" onClick={() => navigate('/student')}>🔙 Back to Student Page</button>
    </div>
  );
}

export default OutPass;
